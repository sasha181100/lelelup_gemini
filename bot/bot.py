import telebot

# token = "7351021789:AAH9yHi0SIF4nML52dSzlwkr43_b1EpW0nA"
token = "7958499973:AAEneo1pmqF0FeF-brNRHi3k2JMT7njOUY8"
bot = telebot.TeleBot(token=token)

# run = False
# users = {}
from GPT.gpt import *
# hello_txt = '''–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ò–∏—à–∫–∞ - –í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –º–∏—Ä—É Bigoland.
#
# –£ –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã!
# –ë–æ–ª–µ–µ 80 –¥–µ—Ç—Å–∫–∏—Ö –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç —Å–Ω–µ–≥–æ–∫–∞—Ç–∞ –¥–æ —ç–ª–µ–∫—Ç—Ä–æ-–∫–∞—Ä—Ç–∏–Ω–≥–∞ –∏–∑ 1 –∫–æ—Ä–æ–±–∫–∏.
#
# –ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å? '''
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '''–ü—Ä–∏–≤–µ—Ç, –í–∞—Å—è!''')

# def check_password(password):
#     if '$' in password and len(password) > 8: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ö–æ—Ä–æ—à–µ—Å—Ç—å –ø–∞—Ä–æ–ª—è
#         return 1
#     else:
#         return 0

# —Ñ—É–Ω–∫—Ü–∏—è - –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–¥–∞
# —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∫–æ–¥–∞
# password = input()
# password2 = input()
# password3 = input()
# if check_password(password) == 1:
#     print("good pass")
# else:
#     print("bad pass")

#
#
#     bot.send_message(message.chat.id, hello_txt)
#
# @bot.message_handler(commands=['help'])
# def help(message):
#     bot.send_message(message.chat.id, '''–£ –±–æ—Ç–∞ –∏–º–µ–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–∞–Ω–¥:
#     /question - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∫ –±–∞–∑–µ.
#     /stop - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É.
#     ''')
# @bot.message_handler(commands=['clear'])
# def clear_history(message):
#     users[message.from_user.id]["chat_history"] = [f'''
#     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ""
#     –ú–µ–Ω–µ–¥–∂–µ—Ä: {hello_txt}''']
#
# @bot.message_handler(commands=['stop'])
# def exitos(message):
#     bot.stop_bot()
#
#
#
# chat_history = ""
#
flag = False
@bot.message_handler(content_types=['text'])
def answer(message):

    if flag:
        user_id = message.from_user.id
        if message.text:
            try:
                ans = generate_answer(message.text, users[user_id]["chat_history"])
                bot.send_message(message.chat.id, ans)
                users[user_id]["chat_history"].append(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.text}")
                users[user_id]["chat_history"].append(f"–ú–µ–Ω–µ–¥–∂–µ—Ä: {ans}")
            except Exception as e:
                bot.send_message(message.chat.id, "–£–ø—Å :( –£ –Ω–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –†–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É" + e.args[0])
    else:
#         –≤—ã–≤–æ–¥ —Ç–æ–≥–æ –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è
#
bot.polling()

class Tools:
    def __init__(self, name, durability, damage):
        self.name = name
        self.durability = durability
        self.damage = damage


pickaxe = Tools("pickaxe", 100, 7)
# —Å–æ–∑–¥–∞–π –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞: spade –∏ sword


print(f"–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {pickaxe.name} –∏–º–µ–µ—Ç –ø—Ä–æ—á–Ω–æ—Å—Ç—å {pickaxe.durability} –∏ –Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω {pickaxe.damage}")
# –≤—ã–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ spade –∏ sword –ø–æ —à–∞–±–ª–æ–Ω—É –∏–∑ –∑–∞–¥–∞–Ω–∏—è